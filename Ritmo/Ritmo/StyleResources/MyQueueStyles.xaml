<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Ritmo"
                    
                    >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="GeneralStyleVariables.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <GridLength  x:Key="PlayColumn">50</GridLength>
    <GridLength  x:Key="NameColumn">*</GridLength >
    <GridLength  x:Key="ArtistColumn">*</GridLength>
    <GridLength  x:Key="AlbumColumn">*</GridLength >
    <GridLength  x:Key="DotColumn">80</GridLength>
    
    <SolidColorBrush x:Key="LabelColor" Color="White"/>

    <!--Margin of buttons and label rows-->
    <Thickness x:Key="MarginRow" Left="25"  Right="25"/>

    <!--Now Playing, Next In Queue, Next Up Style-->
    <Style x:Key="MainLabelStyle" TargetType="Label">
        <Setter Property="Foreground" Value="{StaticResource LabelColor}"/>
        <Setter Property="FontSize" Value="30"/>
    </Style>

    <!--Rows: Labels row (Name, Artist, Album, Duration)-->
    <Style x:Key="LabelRowStyle" TargetType="Label">
        <Setter Property="Foreground" Value="{StaticResource LabelColor}"/>
    </Style>




    <!--Rows: Track row style-->
    <Style x:Key="TrackRowStyle" TargetType="Label">
        <Setter Property="Foreground" Value="{StaticResource LabelColor}"/>
    </Style>


    <!--Inner Button Style (Play Button)-->
    <Style x:Key="InnerButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="White"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="LightGray"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Outer Button Style (Row of track)-->
    <Style x:Key="OuterButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource SecondaryBlueColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" >
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="{StaticResource MarginRow}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SecondaryBlueMouseOver}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource SecondaryBlueMouseClick}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--Clear Queue Button Style-->
    <Style x:Key="ClearQueueStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource SecondaryBlueColor}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="{StaticResource MarginRow}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SecondaryBlueMouseOver}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource SecondaryBlueMouseClick}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>